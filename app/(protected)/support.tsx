import React from 'react';
import {
  View,
  Text,
  StyleSheet,
  ScrollView,
  TouchableOpacity,
  Linking,
  Alert,
} from 'react-native';
import { SafeAreaView } from 'react-native-safe-area-context';
import { router } from 'expo-router';
import useTheme from '@/src/shared/use-theme/use-theme';
import { BackArrowIcon } from '@/src/shared/components/icons';

const SupportScreen: React.FC = () => {
  const theme = useTheme();

  const handleBack = () => {
    router.back();
  };

  const handleEmailPress = () => {
    const email = 'support@mussor.com';
    const subject = '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ Mussor';
    const body = '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –æ–±—Ä–∞—â–∞—é—Å—å –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø–æ –ø–æ–≤–æ–¥—É...';
    
    const emailUrl = `mailto:${email}?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;
    
    Linking.canOpenURL(emailUrl)
      .then((supported) => {
        if (supported) {
          Linking.openURL(emailUrl);
        } else {
          Alert.alert('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –ø–æ—á—Ç–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
        }
      })
      .catch(() => {
        Alert.alert('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –ø–æ—á—Ç–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
      });
  };

  const handlePhonePress = () => {
    const phoneNumber = '+7 (800) 123-45-67';
    const phoneUrl = `tel:${phoneNumber}`;
    
    Linking.canOpenURL(phoneUrl)
      .then((supported) => {
        if (supported) {
          Linking.openURL(phoneUrl);
        } else {
          Alert.alert('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∑–≤–æ–Ω–∫–æ–≤');
        }
      })
      .catch(() => {
        Alert.alert('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∑–≤–æ–Ω–∫–æ–≤');
      });
  };

  const handleTelegramPress = () => {
    const telegramUrl = 'https://t.me/mussor_support';
    
    Linking.canOpenURL(telegramUrl)
      .then((supported) => {
        if (supported) {
          Linking.openURL(telegramUrl);
        } else {
          Alert.alert('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å Telegram');
        }
      })
      .catch(() => {
        Alert.alert('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å Telegram');
      });
  };

  const supportOptions = [
    {
      icon: 'üìß',
      title: 'Email –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
      subtitle: 'support@mussor.com',
      description: '–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –Ω–∞ –ø–æ—á—Ç—É, –∏ –º—ã –æ—Ç–≤–µ—Ç–∏–º –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤',
      onPress: handleEmailPress,
      color: '#2196F3'
    },
    {
      icon: 'üìû',
      title: '–¢–µ–ª–µ—Ñ–æ–Ω –ø–æ–¥–¥–µ—Ä–∂–∫–∏',
      subtitle: '+7 (800) 123-45-67',
      description: '–ó–≤–æ–Ω–∏—Ç–µ –Ω–∞–º —Å 9:00 –¥–æ 18:00 –ø–æ –º–æ—Å–∫–æ–≤—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏',
      onPress: handlePhonePress,
      color: '#4CAF50'
    },
    {
      icon: 'üí¨',
      title: 'Telegram',
      subtitle: '@mussor_support',
      description: '–ë—ã—Å—Ç—Ä–∞—è —Å–≤—è–∑—å —á–µ—Ä–µ–∑ Telegram',
      onPress: handleTelegramPress,
      color: '#0088CC'
    }
  ];

  const faqItems = [
    {
      question: '–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑?',
      answer: '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–ó–∞–∫–∞–∑—ã" –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑". –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞–∫–∞–∑.'
    },
    {
      question: '–ö–∞–∫ –æ—Ç—Å–ª–µ–¥–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞?',
      answer: '–í —Ä–∞–∑–¥–µ–ª–µ "–ó–∞–∫–∞–∑—ã" –≤—ã –º–æ–∂–µ—Ç–µ –≤–∏–¥–µ—Ç—å –≤—Å–µ –≤–∞—à–∏ –∑–∞–∫–∞–∑—ã –∏ –∏—Ö —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å. –¢–∞–∫–∂–µ –º—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö —Å—Ç–∞—Ç—É—Å–∞.'
    },
    {
      question: '–ö–∞–∫ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑?',
      answer: '–ó–∞–∫–∞–∑ –º–æ–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞ –∏ –Ω–∞–∂–º–∏—Ç–µ "–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑".'
    },
    {
      question: '–ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è?',
      answer: '–í —Ä–∞–∑–¥–µ–ª–µ "–ü—Ä–æ—Ñ–∏–ª—å" –Ω–∞–∂–º–∏—Ç–µ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å" –∏ –≤–Ω–µ—Å–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è.'
    }
  ];

  return (
    <SafeAreaView style={[styles.container, { backgroundColor: theme.colors.background }]}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <View style={styles.header}>
        <TouchableOpacity onPress={handleBack} style={styles.backButton}>
          <BackArrowIcon width={24} height={24} color="#1A1A1A" />
        </TouchableOpacity>
        <Text style={[styles.headerTitle, { color: theme.colors.grey900 }]}>–ü–æ–¥–¥–µ—Ä–∂–∫–∞</Text>
        <View style={styles.placeholder} />
      </View>

      <ScrollView style={styles.content} showsVerticalScrollIndicator={false}>
        {/* –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ */}
        <View style={[styles.welcomeCard, { backgroundColor: theme.colors.primary500_12 }]}>
          <Text style={[styles.welcomeTitle, { color: theme.colors.grey900 }]}>
            –ú—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å! ü§ù
          </Text>
          <Text style={[styles.welcomeText, { color: theme.colors.grey600 }]}>
            –í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏ —Å –Ω–∞—à–µ–π —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏
          </Text>
        </View>

        {/* –°–ø–æ—Å–æ–±—ã —Å–≤—è–∑–∏ */}
        <View style={styles.section}>
          <Text style={[styles.sectionTitle, { color: theme.colors.grey900 }]}>–°–ø–æ—Å–æ–±—ã —Å–≤—è–∑–∏</Text>
          {supportOptions.map((option, index) => (
            <TouchableOpacity
              key={index}
              style={[styles.supportOption, { backgroundColor: theme.colors.white }]}
              onPress={option.onPress}
              activeOpacity={0.7}
            >
              <View style={styles.supportOptionContent}>
                <View style={[styles.supportIcon, { backgroundColor: option.color }]}>
                  <Text style={styles.supportIconText}>{option.icon}</Text>
                </View>
                <View style={styles.supportText}>
                  <Text style={[styles.supportTitle, { color: theme.colors.grey900 }]}>
                    {option.title}
                  </Text>
                  <Text style={[styles.supportSubtitle, { color: theme.colors.primary500 }]}>
                    {option.subtitle}
                  </Text>
                  <Text style={[styles.supportDescription, { color: theme.colors.grey600 }]}>
                    {option.description}
                  </Text>
                </View>
              </View>
              <Text style={[styles.arrow, { color: theme.colors.grey400 }]}>‚Ä∫</Text>
            </TouchableOpacity>
          ))}
        </View>

        {/* FAQ */}
        <View style={styles.section}>
          <Text style={[styles.sectionTitle, { color: theme.colors.grey900 }]}>–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</Text>
          {faqItems.map((item, index) => (
            <View key={index} style={[styles.faqItem, { backgroundColor: theme.colors.white }]}>
              <Text style={[styles.faqQuestion, { color: theme.colors.grey900 }]}>
                {item.question}
              </Text>
              <Text style={[styles.faqAnswer, { color: theme.colors.grey600 }]}>
                {item.answer}
              </Text>
            </View>
          ))}
        </View>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <View style={[styles.infoCard, { backgroundColor: theme.colors.primary500_12 }]}>
          <Text style={[styles.infoTitle, { color: theme.colors.grey900 }]}>
            –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —Å–ª—É–∂–±—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏
          </Text>
          <Text style={[styles.infoText, { color: theme.colors.grey600 }]}>
            –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –ü—è—Ç–Ω–∏—Ü–∞: 9:00 - 18:00 (–ú–°–ö){'\n'}
            –°—É–±–±–æ—Ç–∞: 10:00 - 16:00 (–ú–°–ö){'\n'}
            –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ: –≤—ã—Ö–æ–¥–Ω–æ–π
          </Text>
        </View>
      </ScrollView>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  header: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    paddingHorizontal: 20,
    paddingVertical: 16,
    borderBottomWidth: 1,
    borderBottomColor: '#F0F0F0',
  },
  backButton: {
    padding: 8,
  },
  headerTitle: {
    fontSize: 18,
    fontWeight: '600',
  },
  placeholder: {
    width: 60,
  },
  content: {
    flex: 1,
    paddingHorizontal: 20,
  },
  welcomeCard: {
    marginTop: 20,
    padding: 20,
    borderRadius: 12,
    marginBottom: 24,
  },
  welcomeTitle: {
    fontSize: 18,
    fontWeight: '600',
    marginBottom: 8,
  },
  welcomeText: {
    fontSize: 14,
    lineHeight: 20,
  },
  section: {
    marginBottom: 24,
  },
  sectionTitle: {
    fontSize: 16,
    fontWeight: '600',
    marginBottom: 16,
  },
  supportOption: {
    flexDirection: 'row',
    alignItems: 'center',
    padding: 16,
    borderRadius: 12,
    marginBottom: 12,
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 2,
    },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 2,
  },
  supportOptionContent: {
    flex: 1,
    flexDirection: 'row',
    alignItems: 'center',
  },
  supportIcon: {
    width: 48,
    height: 48,
    borderRadius: 24,
    alignItems: 'center',
    justifyContent: 'center',
    marginRight: 16,
  },
  supportIconText: {
    fontSize: 20,
  },
  supportText: {
    flex: 1,
  },
  supportTitle: {
    fontSize: 16,
    fontWeight: '600',
    marginBottom: 4,
  },
  supportSubtitle: {
    fontSize: 14,
    fontWeight: '500',
    marginBottom: 4,
  },
  supportDescription: {
    fontSize: 12,
    lineHeight: 16,
  },
  arrow: {
    fontSize: 20,
    fontWeight: '300',
  },
  faqItem: {
    padding: 16,
    borderRadius: 12,
    marginBottom: 12,
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 1,
    },
    shadowOpacity: 0.05,
    shadowRadius: 2,
    elevation: 1,
  },
  faqQuestion: {
    fontSize: 14,
    fontWeight: '600',
    marginBottom: 8,
  },
  faqAnswer: {
    fontSize: 13,
    lineHeight: 18,
  },
  infoCard: {
    padding: 20,
    borderRadius: 12,
    marginBottom: 20,
  },
  infoTitle: {
    fontSize: 16,
    fontWeight: '600',
    marginBottom: 8,
  },
  infoText: {
    fontSize: 14,
    lineHeight: 20,
  },
});

export default SupportScreen;
